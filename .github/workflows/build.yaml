name: Build and test
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main
permissions:
  contents: write
  packages: write
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        job:
          - os: ubuntu-latest
            arch: x86_64
            libc: gnu
            publish: true
          - os: ubuntu-latest
            arch: aarch64
            libc: gnu
          - os: ubuntu-latest
            arch: x86_64
            libc: musl
          - os: ubuntu-latest
            arch: aarch64
            libc: musl
          - os: macos-latest
            arch: x86_64
          - os: macos-latest
            arch: aarch64
    env:
      TARGETARCH: ${{ matrix.job.arch }}
      LIBC: ${{ matrix.job.libc }}
    steps:
      - uses: actions/checkout@v4
      - run: ./scripts/setup-depends.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "TARGET=$(./scripts/resolve-arch.sh target)" >> $GITHUB_ENV
      - name: Build
        run: |
          rustup target add $TARGET
          cargo build --release --target $TARGET
          mv target/$TARGET/release/stablessh /tmp/stablessh-$TARGET
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: stablessh-${{ env.TARGET }}
          path: /tmp/stablessh-${{ env.TARGET }}
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: /tmp/stablessh-${{ env.TARGET }}
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      - name: Publish crate
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && matrix.job.publish
